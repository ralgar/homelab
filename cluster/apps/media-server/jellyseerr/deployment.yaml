---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jellyseerr
  namespace: media-server
  labels:
    app.kubernetes.io/name: jellyseerr
  annotations:
    ignore-check.kube-linter.io/no-read-only-root-fs: "Unsupported for this app."
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: jellyseerr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jellyseerr
    spec:
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        runAsUser: 105055
        runAsGroup: 105055
        fsGroup: 105055
      initContainers:
        - name: init-config
          image: docker.io/archlinux:base-devel
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: jellyseerr-config
              mountPath: /configmaps
            - name: jellyseerr-data
              mountPath: /app/config
            - name: jellyseerr-secrets
              mountPath: /secrets
          command: ["/configmaps/init.sh"]
          resources:
            limits:
              cpu: 250m
              memory: 250Mi
            requests:
              cpu: 125m
              memory: 250Mi
      containers:
        - name: jellyseerr
          image: ghcr.io/fallenbagel/jellyseerr:2.7.3
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_TYPE
              value: postgres
            - name: DB_HOST
              valueFrom: { secretKeyRef: { name: mediadb-pguser-jellyseerr, key: host } }
            - name: DB_PORT
              valueFrom: { secretKeyRef: { name: mediadb-pguser-jellyseerr, key: port } }
            - name: DB_USER
              valueFrom: { secretKeyRef: { name: mediadb-pguser-jellyseerr, key: user } }
            - name: DB_PASS
              valueFrom: { secretKeyRef: { name: mediadb-pguser-jellyseerr, key: password } }
            - name: DB_NAME
              value: jellyseerr
            - name: DB_USE_SSL
              value: "true"
            - name: DB_SSL_REJECT_UNAUTHORIZED
              value: "false"
          ports:
            - name: jellyseerr-http
              containerPort: 5055
              protocol: TCP
          volumeMounts:
            - name: jellyseerr-data
              mountPath: /app/config
          resources:
            limits:
              cpu: 2000m
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 500Mi
          # livenessProbe:
          #   exec:
          #     command:
          #     - /usr/bin/env
          #     - bash
          #     - -c
          #     - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while read -d
          #       \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
          #   failureThreshold: 5
          #   initialDelaySeconds: 60
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 5055
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 5055
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
          securityContext:
            runAsNonRoot: true
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
      volumes:
        - name: jellyseerr-config
          configMap:
            name: jellyseerr-config
            defaultMode: 0777
        - name: jellyseerr-data
          emptyDir:
            sizeLimit: 1Gi
        - name: jellyseerr-secrets
          secret:
            secretName: jellyseerr-secrets
